name: Publish Container Image

on: workflow_dispatch

jobs:
  build:
    runs-on: ubuntu-22.04
    steps:
      - 
        name: Checkout
        uses: actions/checkout@v3
      -
        name: Docker meta
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: |
            vatfree/hoppscotch
            ghcr.io/vatfree/hoppscotch
          tags: |
            type=raw,value=${{ github.event.client_payload.tag_name }}
            type=raw,value=${{ github.event.client_payload.tag_major }}
            type=raw,value=latest
          labels: |
            maintainer=Vatfree
            org.opencontainers.image.authors=linuxserver.io,github.com/hoppscotch/hoppscotch,github.com/webysther/hoppscotch-docker,github.com/vatfree/hoppscotch-docker
            org.opencontainers.image.licenses=GPL-3.0-only,MIT
            org.opencontainers.image.title=Hoppscotch docker
            org.opencontainers.image.description=All-in-one hoppscotch image that works with one domain and have embed smtp
            org.opencontainers.image.version=${{ github.event.client_payload.tag_name }}
            org.opencontainers.image.documentation=https://github.com/vatfree/hoppscotch-docker#application-setup
            org.opencontainers.image.vendor=Hoppscotch
      - 
        name: Set up QEMU
        uses: docker/setup-qemu-action@v2
      - 
        name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      -
        name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - 
        name: Login to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password:  ${{ secrets.GITHUB_TOKEN }}
      - 
        name: Build and push
        uses: docker/build-push-action@v4
        with:
          context: .
          push: true
          provenance: true
          sbom: true
          cache-from: type=gha
          cache-to: type=gha,mode=max
          tags: ${{ steps.meta.outputs.tags }}
          platforms: |
            linux/amd64
            linux/arm64
          labels: ${{ steps.meta.outputs.labels }}
